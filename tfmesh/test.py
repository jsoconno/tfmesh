
from collections import defaultdict

d = {'modules': {'consul': {'target': 'modules', 'filepath': '/Users/justinoconnor/Code/tfmesh/terraform/main.tf', 'filename': 'main.tf', 'code': 'module "consul" {\n  source = "hashicorp/consul/aws"\n  version = "0.5.0" # ~>0.5.0\n}', 'name': 'consul', 'source': 'hashicorp/consul/aws', 'version': '0.5.0', 'constraint': '~>0.5.0', 'lower_constraint_operator': '~>', 'lower_constraint': '0.5.0', 'upper_constraint_operator': '', 'upper_constraint': ''}, 'conventions': {'target': 'modules', 'filepath': '/Users/justinoconnor/Code/tfmesh/terraform/main.tf', 'filename': 'main.tf', 'code': 'module "conventions" {\n  source  = "Jsoconno/conventions/azure"\n  version = "0.5.3" # ~>0.4\n  # insert the 1 required variable here\n}', 'name': 'conventions', 'source': 'Jsoconno/conventions/azure', 'version': '0.5.3', 'constraint': '~>0.4', 'lower_constraint_operator': '~>', 'lower_constraint': '0.4', 'upper_constraint_operator': '', 'upper_constraint': ''}, 'api_gateway': {'target': 'modules', 'filepath': '/Users/justinoconnor/Code/tfmesh/terraform/main.tf', 'filename': 'main.tf', 'code': 'module "api_gateway" {\n  source = "github.com/jsoconno/terraform-module-aws-api-gateway?ref=v1.0.2"\n    # source = "../terraform-module-aws-api-gateway"\n\n  name = "test-api-gateway"\n  body = local.body\n\n  tags = var.tags\n}', 'name': 'api_gateway', 'source': 'github.com/jsoconno/terraform-module-aws-api-gateway', 'version': 'v1.0.2', 'constraint': '', 'lower_constraint_operator': '', 'lower_constraint': '', 'upper_constraint_operator': '', 'upper_constraint': ''}, 'lambda': {'target': 'modules', 'filepath': '/Users/justinoconnor/Code/tfmesh/terraform/main.tf', 'filename': 'main.tf', 'code': 'module "lambda" {\n  source = "github.com/jsoconno/terraform-module-aws-lambda?ref=v1.1.2" # ~>1.1\n  #   source = "../terraform-module-aws-lambda"\n\n  name = "test-lambda"\n\n  environment_variables = {\n    REGION = data.aws_region.current.name\n    BUCKET = module.s3.id\n  }\n\n  api_gateway_source_arns = [\n    module.api_gateway.execution_arn\n  ]\n\n  tags = var.tags\n}', 'name': 'lambda', 'source': 'github.com/jsoconno/terraform-module-aws-lambda', 'version': 'v1.1.2', 'constraint': '~>1.1', 'lower_constraint_operator': '~>', 'lower_constraint': '1.1', 'upper_constraint_operator': '', 'upper_constraint': ''}, 's3': {'target': 'modules', 'filepath': '/Users/justinoconnor/Code/tfmesh/terraform/main.tf', 'filename': 'main.tf', 'code': 'module "s3" {\n  source = "github.com/jsoconno/terraform-module-aws-s3?ref=v1.1.0" # >=1.0.0, <2.0.0\n# source = "../terraform-module-aws-s3"\n\n  s3_access_iam_role_names = [\n      module.lambda.role_name\n  ]\n\n  tags = var.tags\n}', 'name': 's3', 'source': 'github.com/jsoconno/terraform-module-aws-s3', 'version': 'v1.1.0', 'constraint': '>=1.0.0, <2.0.0', 'lower_constraint_operator': '>=', 'lower_constraint': '1.0.0', 'upper_constraint_operator': '<', 'upper_constraint': '2.0.0'}}, 'terraform': {'terraform': {'target': 'terraform', 'filepath': '/Users/justinoconnor/Code/tfmesh/terraform/versions.tf', 'filename': 'versions.tf', 'code': 'terraform {\n    required_version = "1.1.1" # <=1.1.1', 'name': 'terraform', 'source': 'terraform', 'version': '1.1.1', 'constraint': '<=1.1.1', 'lower_constraint_operator': '<=', 'lower_constraint': '1.1.1', 'upper_constraint_operator': '', 'upper_constraint': ''}}, 'providers': {'aws': {'target': 'providers', 'filepath': '/Users/justinoconnor/Code/tfmesh/terraform/versions.tf', 'filename': 'versions.tf', 'code': 'aws = {\n            source = "hashicorp/aws"\n            version = "3.73.0" # >=3.0.0, <4.0.0\n        }', 'name': 'aws', 'source': 'hashicorp/aws', 'version': '3.73.0', 'constraint': '>=3.0.0, <4.0.0', 'lower_constraint_operator': '>=', 'lower_constraint': '3.0.0', 'upper_constraint_operator': '<', 'upper_constraint': '4.0.0'}, 'azurerm': {'target': 'providers', 'filepath': '/Users/justinoconnor/Code/tfmesh/terraform/versions.tf', 'filename': 'versions.tf', 'code': 'azurerm = {\n            source = "hashicorp/azurerm"\n            version = "2.92.0" # >=2.0.0\n        }', 'name': 'azurerm', 'source': 'hashicorp/azurerm', 'version': '2.92.0', 'constraint': '>=2.0.0', 'lower_constraint_operator': '>=', 'lower_constraint': '2.0.0', 'upper_constraint_operator': '', 'upper_constraint': ''}}}

r = defaultdict(dict)

resources = [['modules', 'consul'], ['providers', 'aws']] # The keys you want
# dict((k, bigdict[k]) for k in wanted_keys if k in bigdict)

for resource in resources:
    resource_type = resource[0]
    resource_name = resource[1]

    r[resource_type][resource_name] = d[resource_type][resource_name]
    
    # r[resource_type][resource_name] = resource[resource_type][resource_name]

print(r)